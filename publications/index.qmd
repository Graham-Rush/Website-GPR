---
title: ""
echo: false
section-divs: false
keep-md: true
---

```{=html} 
<!-- Slideshow container -->
<div class="slideshow-container">

  <!-- Full-width images with number and caption text -->
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">5 / 3</div> -->
  <img src="../img/paper.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">6 / 3</div> -->
  <img src="../img/survey.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">7 / 3</div> -->
  <img src="../img/lecture1.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">8 / 3</div> -->
  <img src="../img/sun.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">9 / 3</div> -->
  <img src="../img/os1.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">1 / 3</div> -->
  <img src="../img/ythan-marsh1.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">2 / 3</div> -->
  <img src="../img/lecture2.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">3 / 3</div> -->
  <img src="../img/8map.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <div class="mySlides fade">
  <!-- <div class="numbertext">4 / 3</div> -->
  <img src="../img/plane.jpg" style="width:100%">
  <div class="text"></div>
  </div>
  
  <!-- Next and previous buttons -->
  <!-- <a class="prev" onclick="plusSlides(-1)">&#10094;</a> -->
  <!-- <a class="next" onclick="plusSlides(1)">&#10095;</a> -->
  </div>
  
  <!-- ... Rest of your header content ... -->
  
  <style>
    /* Your CSS styles for the slideshow go here */
    /* Slideshow container */
    .slideshow-container {
      width: 100%; /* Set the desired width for the container. I need this to match the image ratio, as it does now for image 2 */
      <!-- height: 100px; /* Set the desired height for the container */ -->
      overflow: hidden; /* Hide any overflowing content */
      position: relative;
      margin: auto;
      border: 2px solid #068194; /* Add a border around the container */
    }
  
    .image-container img {
    width: 100%; /* Take up the full width of the container */
      height: 100%; /* Take up the full height of the container */
      object-fit: cover; /* Maintain aspect ratio and cover entire container */
      display: block; /* Remove any extra spacing caused by inline display */
  }
  
    /* Hide the images by default */
    .mySlides {
      display: none;
    }
  
    /* Next & previous buttons */
    .prev, .next {
      cursor: pointer;
      position: absolute;
      top: 50%;
      width: auto;
      margin-top: -22px;
      padding: 16px;
      color: white;
      font-weight: bold;
      font-size: 18px;    
      transition: 0.6s ease;
      border-radius: 0 3px 3px 0;
      user-select: none;
    }
  
    /* Caption text */
    .text {
      color: #f2f2f2;
        font-size: 48px;
      padding: 8px 12px;
      position: absolute;
      bottom: 8px;
      width: 100%;
      text-align: center;
    }
  
    /* Text overlay */
    .text-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      color: red; /* Text color */
        z-index: 1; /* Place the text above the image */
    }
  
    /* Number text (1/3 etc) */
    .numbertext {
      color: #f2f2f2;
        font-size: 12px;
      padding: 8px 12px;
      position: absolute;
      top: 0;
    }
  
    /* Fading animation */
    .fade {
      animation-name: fade;
      animation-duration: 30s;
    }
    
    @keyframes fade {
      from {opacity: .8}
      to {opacity: 1}
    }
  </style>
  
  <script>
    // Your JavaScript code for the slideshow goes here
    let slideIndex = 0;
    showSlides();
    
    function showSlides() {
      let i;
      let slides = document.getElementsByClassName("mySlides");
      for (i = 0; i < slides.length; i++) {
        slides[i].style.display = "none";
      }
      slideIndex++;
      if (slideIndex > slides.length) {slideIndex = 1}
      slides[slideIndex-1].style.display = "block";
      setTimeout(showSlides, 5000); // Change image every 2 seconds
    }
  </script>
```

<div class="h1" style="background-color: #e41a1c; color: white; text-align: center; margin-top: 0; ">Publications</div>

<!-- #068194 -->

<!-- Start of the code to read and write publication list -->
```{r}
read_yaml <- function(file) {
  yaml::yaml.load_file(file)
}

readable_list <- function(s) {
  if (length(s) < 3) {
    return(paste(collapse = " and ", s))
  }
  a <- s[-length(s)]
  b <- s[length(s)]
  return(paste(paste(collapse = ", ", a), " and ", b))
}

button <- function(url, str, icon) {
  icon_base <- substr(icon, 1, 2)
  return(paste(
    "<a class='btn btn-outline-dark btn-sm' href='", url,
    "' target='_blank' rel='noopener noreferrer'>",
    "<i class='", icon_base, " ", icon,
    "' role='img' aria-label='", str, "'></i>", str,
    "</a>", sep = ""
  ))
}

yaml_data <- read_yaml("pubs.yaml")
pub_strs <- list(pubs = list(), books = list(), wps = list())

for (key in names(yaml_data)) {
  data <- yaml_data[[key]]
  title_str <- data[["title"]]
  authors <- data[["authors"]]
  
  # my script to change authors names
  authors_new <- character(0)
  for (i in 1:length(authors)) {
    auth <- authors[i]
    # Remove leading and trailing spaces and split by commas
    parts <- unlist(strsplit(trimws(auth), ","))
    if (length(parts) > 1) {
    # Rearrange the parts and create initials
    names <- strsplit(trimws(parts[2:length(parts)]), " ")
    names <- unlist (names)
    initials <- paste0(substr(names, 1, 1), ".")
    new_string <- paste(unlist(list(c(initials))), collapse = " ")
    rearranged_string <- paste(new_string, parts[1], sep = " ")
    # cat(rearranged_string, "\n")
    authors_new[i] <- rearranged_string
    } else {
      authors_new[i] <- auth
    }
  }
  authors <- authors_new
  # to here
  
  if (is.null(authors)) {
    authors <- c("me")
  }
  authors <- ifelse(authors != "me", authors, "<strong>G. Rush</strong>")
  author_str <- readable_list(authors)
  year_str <- data[["year"]]
  journal_str <- data[["journal"]]
  
  buttons <- character(0)
  # preprint <- data[["preprint"]]
  # if (!is.null(preprint)) {
  #   buttons <- c(buttons, button(preprint, "Preprint", "bi-file-earmark-pdf"))
  # }
  
  # github <- data[["github"]]
  # if (!is.null(github)) {
  #   buttons <- c(buttons, button(github, "Github", "bi-github"))
  # }
  
  pub_url <- data[["published_url"]]
  venue <- data[["venue"]]
  working_paper <- is.null(pub_url)
  book_str <- data[["book"]]
  publisher_str <- data[["publisher"]]
  editors <- data[["editor"]]
  
  pub_str <- paste(
    # author_str, " (", year_str, ") /"", title_str, "/".", sep = ""
    author_str, " (", year_str, ") \"", title_str, ".\"", " <i>", journal_str, ".</i>", sep = ""
  )
  
  if (!is.null(venue)) {
    pub_str <- paste(pub_str, " <em>", venue, "</em>", sep = "")
  }
  
  if (!is.null(book_str)) {
    if (!is.null(editors)) { 
    # my script to change authors names
    editors_new <- character(0)
    for (i in 1:length(editors)) {
      auth <- editor_str[i]
      # Remove leading and trailing spaces and split by commas
      parts <- unlist(strsplit(trimws(auth), ","))
      if (length(parts) > 1) {
      # Rearrange the parts and create initials
      names <- strsplit(trimws(parts[2:length(parts)]), " ")
      names <- unlist (names)
      initials <- paste0(substr(names, 1, 1), ".")
      new_string <- paste(unlist(list(c(initials))), collapse = " ")
      rearranged_string <- paste(new_string, parts[1], sep = " ")
      # cat(rearranged_string, "\n")
      editors_new[i] <- rearranged_string
      } else {
        editors_new[i] <- auth
      }
    }
    editors <- editors_new
    
    if (is.null(editors)) {
    editors <- c("me")
    }
    editors <- ifelse(editors != "me", editors, "<strong>G. Rush</strong>")
    editors_str <- readable_list(editors)
    
    pub_str <- paste(author_str, " (", year_str, ") \"", title_str, ",\"", " in <i>", book_str, ", edited by ", editors_str, ", ", publisher_str, ".</i>", sep = "")
    } else {
      pub_str <- paste(author_str, " (", year_str, ") \"", title_str, ",\"", " in <i>", book_str, ".</i> ", publisher_str, ".", sep = "")
    }
  }
  
  
  if (working_paper) { # add the reference to the relevant list 
    if (!year_str %in% names(pub_strs[["wps"]])) {
      pub_strs[["wps"]][[as.character(year_str)]] <- character(0)
    }
    pub_strs[["wps"]][[as.character(year_str)]] <- c(
      pub_strs[["wps"]][[as.character(year_str)]],
      paste("<li class='list-group-item'>", pub_str, "<br>",
            paste(buttons, collapse = " "), "</li>", sep = "")
    )
  } else {
    if ((!is.null(journal_str))) {
      if (!year_str %in% names(pub_strs[["pubs"]])) {
      pub_strs[["pubs"]][[as.character(year_str)]] <- character(0)
    }
    buttons <- c(buttons, button(pub_url, "Access the orignal article", "ai-archive"))
    pub_strs[["pubs"]][[as.character(year_str)]] <- c(
      pub_strs[["pubs"]][[as.character(year_str)]],
      paste("<li class='list-group-item'>", pub_str, "<br>",
            paste(buttons, collapse = " "), "</li>", sep = "")
    )
    } else {
    if (!year_str %in% names(pub_strs[["books"]])) {
      pub_strs[["books"]][[as.character(year_str)]] <- character(0)
    }
    buttons <- c(buttons, button(pub_url, "Access the orignal article", "ai-archive"))
    pub_strs[["books"]][[as.character(year_str)]] <- c(
      pub_strs[["books"]][[as.character(year_str)]],
      paste("<li class='list-group-item'>", pub_str, "<br>",
            paste(buttons, collapse = " "), "</li>", sep = "")
    )
    }
  }
}
```

<!-- # Publications -->

## Published work

### Scientific journal articles

```{r}
#| label: "published-year"
#| id: "published-year"
#| output: asis
years <- names(pub_strs[["pubs"]])
# for (year in rev(years)) {
for (year in years) {
  cat("### ", year, "\n")
cat(paste(
  # "<ul class='list-group list-group-flush'>\n",
  # sapply(years, function(year) {
    paste(pub_strs[["pubs"]][[as.character(year)]], collapse = "\n")
  # }),
  # "</ul>\n",
  # sep = ""
))
}
```

### Book chapters

```{r}
#| label: "book-published-year"
#| id: "book-published-year"
#| output: asis
years <- names(pub_strs[["books"]])
# for (year in rev(years)) {
for (year in years) {
  cat("### ", year, "\n")
cat(paste(
  # "<ul class='list-group list-group-flush'>\n",
  # sapply(years, function(year) {
    paste(pub_strs[["books"]][[as.character(year)]], collapse = "\n")
  # }),
  # "</ul>\n",
  # sep = ""
))
}
```

<hr style="color: #000; background-color: #000; height: 2px; border: none;">

<!-- ## Work not yet published -->

<!-- ```{r} -->
<!-- #| label: "not-published-year" -->
<!-- #| id: "not-published-year" -->
<!-- #| output: asis -->
<!-- years <- names(pub_strs[["wps"]]) -->
<!-- for (year in rev(years)) { -->
<!--   cat("### ", year, "\n") -->
<!-- } -->
<!-- cat(paste( -->
<!--   "<ul class='list-group list-group-flush'>\n", -->
<!--   sapply(years, function(year) { -->
<!--     paste(pub_strs[["wps"]][[year]], collapse = "\n") -->
<!--   }), -->
<!--   "</ul>\n", -->
<!--   sep = "" -->
<!-- )) -->
<!-- ``` -->

<!-- This si some text -->

<!-- ```{r} -->
<!-- cat(paste("this is some more text")) -->
<!-- ``` -->

